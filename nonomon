#! /bin/zsh

#TODO: show usage if less than two args were provided
#TODO: we need to do one execution as soon as we start
TMPFILE="/tmp/$(basename $0).$$.tmp"
COMMAND=$1
shift
TARGETS=$@

# echo "The target is:\n $TARGETS"
# echo "The command is: $COMMAND"
# echo "The tmp file is: $TMPFILE"

while true;
do
  echo ">> Watching <<"
  inotifywait -r -e close_write -e move_self \
    --fromfile =(echo $TARGETS | sed 's/ /\n/g') > $TMPFILE 2>&1

  #TODO right now it looks like we only get one file name
  CHANGED_FILES=$(grep -Po '.*(?=MOVE_SELF|CLOSE_WRITE)' $TMPFILE \
    | sed 's/\n/ /g')

  # we assume there is only one file, otherwise this would
  # need to be iterative
  FILE_WITHOUT_EXTENSION="${CHANGED_FILES%.*}"

  echo ">> Executing <<\n"
  # if the command contains $file or $file_without_extension,
  # set $file and execute without appending. Otherwise, don't 
  # set file and append.
  if [[ "${COMMAND%%\$file*}" != $COMMAND ]]; then
    eval "file=$CHANGED_FILES;file_without_extension=$FILE_WITHOUT_EXTENSION; $COMMAND"
  else
    eval "$COMMAND $CHANGED_FILES"
  fi

  echo "\n>> Executed"
done
